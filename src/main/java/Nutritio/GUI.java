package Nutritio;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintWriter;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.table.DefaultTableModel;

public class GUI extends javax.swing.JFrame {

    private PrintWriter pw;
    private Set<Recipe> recipes;

    public GUI() {
        initComponents();
        pw = null;
        recipes = new HashSet();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane2 = new javax.swing.JTabbedPane();
        homePanel = new javax.swing.JPanel();
        ingredientInput = new javax.swing.JTextField();
        generateResults = new javax.swing.JButton();
        stringFormatButton = new javax.swing.JButton();
        resultsPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultsTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ingredientInput.setText("Enter the ingredients you have in a list separated by commas");
        ingredientInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ingredientInputActionPerformed(evt);
            }
        });

        generateResults.setText("Generate Recipe Ideas");
        generateResults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateResultsActionPerformed(evt);
            }
        });

        stringFormatButton.setText("Test String Formatting");
        stringFormatButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stringFormatButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout homePanelLayout = new javax.swing.GroupLayout(homePanel);
        homePanel.setLayout(homePanelLayout);
        homePanelLayout.setHorizontalGroup(
                homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(homePanelLayout.createSequentialGroup()
                                .addGap(48, 48, 48)
                                .addComponent(ingredientInput, javax.swing.GroupLayout.PREFERRED_SIZE, 469, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(114, 114, 114)
                                .addGroup(homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(stringFormatButton)
                                        .addComponent(generateResults))
                                .addContainerGap(101, Short.MAX_VALUE))
        );
        homePanelLayout.setVerticalGroup(
                homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(homePanelLayout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addGroup(homePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(ingredientInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(generateResults))
                                .addGap(18, 18, 18)
                                .addComponent(stringFormatButton)
                                .addContainerGap(331, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Home", homePanel);

        resultsTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][]{},
                new String[]{
                    "Recipes", "Ingredients", "Images"
                }
        ) {
            Class[] types = new Class[]{
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types[columnIndex];
            }
        });
        jScrollPane1.setViewportView(resultsTable);

        jLabel1.setText("jLabel1");

        javax.swing.GroupLayout resultsPanelLayout = new javax.swing.GroupLayout(resultsPanel);
        resultsPanel.setLayout(resultsPanelLayout);
        resultsPanelLayout.setHorizontalGroup(
                resultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(resultsPanelLayout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 756, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1)
                                .addGap(110, 110, 110))
        );
        resultsPanelLayout.setVerticalGroup(
                resultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
                        .addGroup(resultsPanelLayout.createSequentialGroup()
                                .addGap(111, 111, 111)
                                .addComponent(jLabel1)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Recipe Results", resultsPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jTabbedPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 938, Short.MAX_VALUE)
                                .addContainerGap())
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTabbedPane2)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ingredientInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ingredientInputActionPerformed

    }//GEN-LAST:event_ingredientInputActionPerformed

    private void displayResultsInTable() {
        DefaultTableModel model = (DefaultTableModel) resultsTable.getModel();

        model.setRowCount(0);

        for (Recipe r : recipes) {
            Object[] data = new Object[3];
            data[0] = r.getName();
            data[1] = r.getIngredients();
            Icon temp = null;
            try {
                temp = new ImageIcon(new URL(r.getImageURL()));
            } catch (MalformedURLException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            data[2] = temp;
            model.addRow(data);
        }
    }

    private ArrayList<String> formatInput() {
        ArrayList<String> ingredientList = new ArrayList();
        String userIngredients = ingredientInput.getText();
        userIngredients = userIngredients.replaceAll("[\\n\\t ]", "");
        Scanner scanner = new Scanner(userIngredients);
        scanner.useDelimiter(",");

        while (scanner.hasNext()) {
            ingredientList.add(scanner.next());
        }
        System.out.println(ingredientList);

        return ingredientList;
    }

    public void loadImage() {//I eat ass
        try {
            URL url = new URL("https://spoonacular.com/recipeImages/484827-312x231.jpg");
            InputStream in = url.openStream();
            BufferedImage image = ImageIO.read(in);
            jLabel1 = new JLabel(new ImageIcon(image));
            homePanel.add(jLabel1);
        } catch (IOException e) {
            System.out.println(" off");
        }
    }

    private void generateResultsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateResultsActionPerformed
        ArrayList<String> ingredients = formatInput();

        // String[] ingredients = { "apples", "flour", "sugar"};
        PrintWriter pw = null;

        try {
            pw = new PrintWriter(new FileWriter(new File("output.nut")));
        } catch (IOException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }

        FetchFromAPI http = new FetchFromAPI();
        String rawData = null;
        try {
            rawData = http.getRecipeData(ingredients);
        } catch (Exception ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }

        // Test print to show recipes ArrayList is being populated and its contents are accessible        
        String[] rawRecipes = rawData.split("title");

        System.out.println(rawRecipes.length);

        for (int i = 1; i < rawRecipes.length; i++) {
            String recipeName = (rawRecipes[i].split("\",\"")[0]).substring(3);
            String imageURL = rawRecipes[i].split("\",\"")[1].split("\":\"")[1];
            recipes.add(new Recipe(recipeName, new ArrayList<Ingredient>(), imageURL));
            System.out.println(recipeName);
        }

        for (String recipe : rawRecipes) {
            pw.print(recipe + "\n\n\n\n\n");
        }
        pw.close();

        displayResultsInTable();
    }//GEN-LAST:event_generateResultsActionPerformed

    private void stringFormatButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stringFormatButtonActionPerformed
        loadImage();
    }//GEN-LAST:event_stringFormatButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton generateResults;
    private javax.swing.JPanel homePanel;
    private javax.swing.JTextField ingredientInput;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JPanel resultsPanel;
    private javax.swing.JTable resultsTable;
    private javax.swing.JButton stringFormatButton;
    // End of variables declaration//GEN-END:variables
}
